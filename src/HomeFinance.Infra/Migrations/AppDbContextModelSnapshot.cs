// <auto-generated />
using System;
using HomeFinance.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HomeFinance.Infra.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HomeFinance.Domain.Models.Finances", b =>
                {
                    b.Property<Guid>("FinancesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id_finances");

                    b.Property<string>("FinanceName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(70)")
                        .HasColumnName("finances_name");

                    b.Property<long>("QtdInstallments")
                        .HasColumnType("BIGINT")
                        .HasColumnName("qtd_installments");

                    b.HasKey("FinancesId")
                        .HasName("id_finances");

                    b.ToTable("finances", (string)null);
                });

            modelBuilder.Entity("HomeFinance.Domain.Models.Installments", b =>
                {
                    b.Property<Guid>("InstallmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id_installment");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("date")
                        .HasColumnName("due_date");

                    b.Property<Guid>("FinancesId")
                        .HasColumnType("uuid")
                        .HasColumnName("finance_id");

                    b.Property<int>("InstallmentsPaid")
                        .HasColumnType("INTEGER")
                        .HasColumnName("installments_paid");

                    b.Property<bool>("Paid")
                        .HasColumnType("boolean")
                        .HasColumnName("paid");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal")
                        .HasColumnName("amount");

                    b.Property<int>("TotalInstallments")
                        .HasColumnType("INTEGER")
                        .HasColumnName("total_installments");

                    b.HasKey("InstallmentId");

                    b.HasIndex("FinancesId");

                    b.ToTable("installments", (string)null);
                });

            modelBuilder.Entity("HomeFinance.Domain.Models.Installments", b =>
                {
                    b.HasOne("HomeFinance.Domain.Models.Finances", "Finance")
                        .WithMany("Installments")
                        .HasForeignKey("FinancesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Finance");
                });

            modelBuilder.Entity("HomeFinance.Domain.Models.Finances", b =>
                {
                    b.Navigation("Installments");
                });
#pragma warning restore 612, 618
        }
    }
}
